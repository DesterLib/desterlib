name: API CI

on:
  push:
    branches: [main, develop]
    paths:
      - "apps/api/**"
      - "packages/**"
      - ".github/workflows/api-ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "apps/api/**"
      - "packages/**"
      - ".github/workflows/api-ci.yml"

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        working-directory: apps/api
        run: pnpm exec prisma generate

      - name: Run linter
        working-directory: apps/api
        run: pnpm run lint

      - name: Check TypeScript types
        working-directory: apps/api
        run: pnpm run check-types

      - name: Run tests
        working-directory: apps/api
        run: pnpm run test

      - name: Generate coverage report
        working-directory: apps/api
        run: pnpm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./apps/api/coverage/lcov.info
          flags: api
          name: api-coverage
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        working-directory: apps/api
        run: pnpm exec prisma generate

      - name: Build project
        working-directory: apps/api
        run: pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-dist
          path: apps/api/dist
          retention-days: 7

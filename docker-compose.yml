version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: desterlib-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: desterlib_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: desterlib-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/desterlib_dev?schema=public
      NODE_ENV: development
    ports:
      - "3001:3001"
    volumes:
      - ./apps/api:/app/apps/api
      - ./apps/web:/app/apps/web
      - /app/node_modules
    working_dir: /app
    command: >
      sh -c "
        cd /app &&
        pnpm install &&
        npx prisma generate &&
        npx prisma db push &&
        pnpm build --filter=web &&
        pnpm dev --filter=api
      "

volumes:
  postgres_data:
